<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="12" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="SuiteExample" duration-ms="140962" started-at="2016-12-23T22:50:16Z" finished-at="2016-12-23T22:52:37Z">
    <groups>
    </groups>
    <test name="Testtry" duration-ms="140962" started-at="2016-12-23T22:50:16Z" finished-at="2016-12-23T22:52:37Z">
      <class name="testNG.TestMethods">
        <test-method status="PASS" signature="preCondition()[pri:0, instance:testNG.TestMethods@4b9e13df]" name="preCondition" is-config="true" duration-ms="20326" started-at="2016-12-24T04:21:20Z" finished-at="2016-12-24T04:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method status="PASS" signature="loginFail()[pri:0, instance:testNG.TestMethods@4b9e13df]" name="loginFail" duration-ms="4072" started-at="2016-12-24T04:21:40Z" finished-at="2016-12-24T04:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginFail -->
        <test-method status="PASS" signature="postCondition()[pri:0, instance:testNG.TestMethods@4b9e13df]" name="postCondition" is-config="true" duration-ms="1098" started-at="2016-12-24T04:21:44Z" finished-at="2016-12-24T04:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method status="PASS" signature="preCondition()[pri:0, instance:testNG.TestMethods@4b9e13df]" name="preCondition" is-config="true" duration-ms="20547" started-at="2016-12-24T04:21:45Z" finished-at="2016-12-24T04:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method status="PASS" signature="loginSuccess()[pri:0, instance:testNG.TestMethods@4b9e13df]" name="loginSuccess" duration-ms="3282" started-at="2016-12-24T04:22:06Z" finished-at="2016-12-24T04:22:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSuccess -->
        <test-method status="PASS" signature="postCondition()[pri:0, instance:testNG.TestMethods@4b9e13df]" name="postCondition" is-config="true" duration-ms="1103" started-at="2016-12-24T04:22:09Z" finished-at="2016-12-24T04:22:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- testNG.TestMethods -->
      <class name="testNG.AssertNotIRCTC">
        <test-method status="PASS" signature="preCondition()[pri:0, instance:testNG.AssertNotIRCTC@475530b9]" name="preCondition" is-config="true" duration-ms="21798" started-at="2016-12-24T04:22:14Z" finished-at="2016-12-24T04:22:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method status="PASS" signature="maxCharInCaptcha()[pri:0, instance:testNG.AssertNotIRCTC@475530b9]" name="maxCharInCaptcha" duration-ms="698" started-at="2016-12-24T04:22:36Z" finished-at="2016-12-24T04:22:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maxCharInCaptcha -->
        <test-method status="PASS" signature="postCondition()[pri:0, instance:testNG.AssertNotIRCTC@475530b9]" name="postCondition" is-config="true" duration-ms="63" started-at="2016-12-24T04:22:37Z" finished-at="2016-12-24T04:22:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- testNG.AssertNotIRCTC -->
      <class name="testNG.LoginTest">
        <test-method status="PASS" signature="loginTest(java.lang.String, java.lang.String)[pri:0, instance:testNG.LoginTest@2b98378d]" name="loginTest" duration-ms="7" started-at="2016-12-24T04:22:14Z" data-provider="getData" finished-at="2016-12-24T04:22:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Username]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="loginTest(java.lang.String, java.lang.String)[pri:0, instance:testNG.LoginTest@2b98378d]" name="loginTest" duration-ms="4" started-at="2016-12-24T04:22:14Z" data-provider="getData" finished-at="2016-12-24T04:22:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[usr1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="loginTest(java.lang.String, java.lang.String)[pri:0, instance:testNG.LoginTest@2b98378d]" name="loginTest" duration-ms="4" started-at="2016-12-24T04:22:14Z" data-provider="getData" finished-at="2016-12-24T04:22:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[usr2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="loginTest(java.lang.String, java.lang.String)[pri:0, instance:testNG.LoginTest@2b98378d]" name="loginTest" duration-ms="3" started-at="2016-12-24T04:22:14Z" data-provider="getData" finished-at="2016-12-24T04:22:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[usr3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="loginTest(java.lang.String, java.lang.String)[pri:0, instance:testNG.LoginTest@2b98378d]" name="loginTest" duration-ms="5" started-at="2016-12-24T04:22:14Z" data-provider="getData" finished-at="2016-12-24T04:22:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[usr4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
      </class> <!-- testNG.LoginTest -->
      <class name="testNG.AssertGmail">
        <test-method status="PASS" signature="preconditon()[pri:0, instance:testNG.AssertGmail@18be83e4]" name="preconditon" is-config="true" duration-ms="28388" started-at="2016-12-24T04:20:16Z" finished-at="2016-12-24T04:20:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preconditon -->
        <test-method status="PASS" signature="testPlaceholder()[pri:0, instance:testNG.AssertGmail@18be83e4]" name="testPlaceholder" duration-ms="5675" started-at="2016-12-24T04:20:44Z" finished-at="2016-12-24T04:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPlaceholder -->
        <test-method status="PASS" signature="postCondition()[pri:0, instance:testNG.AssertGmail@18be83e4]" name="postCondition" is-config="true" duration-ms="41" started-at="2016-12-24T04:20:50Z" finished-at="2016-12-24T04:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method status="PASS" signature="preconditon()[pri:0, instance:testNG.AssertGmail@18be83e4]" name="preconditon" is-config="true" duration-ms="18420" started-at="2016-12-24T04:20:50Z" finished-at="2016-12-24T04:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preconditon -->
        <test-method status="FAIL" signature="verifyEmailIDBoxText()[pri:0, instance:testNG.AssertGmail@18be83e4]" name="verifyEmailIDBoxText" duration-ms="11525" started-at="2016-12-24T04:21:08Z" finished-at="2016-12-24T04:21:20Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<true> but was:<false>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<true> but was:<false>
	at org.testng.AssertJUnit.fail(AssertJUnit.java:59)
	at org.testng.AssertJUnit.failNotEquals(AssertJUnit.java:364)
	at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:80)
	at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:185)
	at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:192)
	at testNG.AssertGmail.verifyEmailIDBoxText(AssertGmail.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailIDBoxText -->
        <test-method status="PASS" signature="postCondition()[pri:0, instance:testNG.AssertGmail@18be83e4]" name="postCondition" is-config="true" duration-ms="44" started-at="2016-12-24T04:21:20Z" finished-at="2016-12-24T04:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- testNG.AssertGmail -->
      <class name="testNG.TestOne">
        <test-method status="PASS" signature="e()[pri:0, instance:testNG.TestOne@cb5822]" name="e" duration-ms="3" started-at="2016-12-24T04:21:20Z" finished-at="2016-12-24T04:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- e -->
        <test-method status="PASS" signature="f()[pri:0, instance:testNG.TestOne@cb5822]" name="f" duration-ms="5" started-at="2016-12-24T04:21:20Z" finished-at="2016-12-24T04:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- testNG.TestOne -->
    </test> <!-- Testtry -->
  </suite> <!-- SuiteExample -->
</testng-results>
